{
"collections":[  
      {  
         "fields":[  
            {  
               "type":"ObjectIdType",
               "logical_type":"OID",
               "field_name":"_id",
               "desc": "Identifier of the document"
            },
            {  
               "type":"ObjectIdType",
               "logical_type":"RID",
               "reference_to": "vcs_system",
               "field_name":"vcs_system_id",
               "desc": "ObjectID of the vcs_system to which this commits link"
            },
            {  
               "type":"StringType",
               "logical_type":"Hash",
               "field_name":"revision_hash",
               "desc": "Hash of the commit (e.g., SHA-Hash of github commit)"
            },
            {  
               "sub_type":"StringType",
               "type":"ArrayType",
               "logical_type":"ProductMetric",
               "field_name":"branches",
               "desc": "All branches to which this commits belong (same representation as on github)"
            },
            {  
               "sub_type":"StringType",
               "type":"ArrayType",
               "logical_type":"ID",
               "field_name":"parents",
               "desc": "Hashes of the commits, that are parents of the commit at hand"
            },
            {  
               "type":"ObjectIdType",
               "logical_type":"RID",
               "reference_to": "people",
               "field_name":"author_id",
               "desc": "ObjectID of the author of the commit. Author is the person that originally wrote the code that is committed"
            },
            {  
               "type":"DateType",
               "logical_type":"Date",
               "field_name":"author_date",
               "desc": "Date at which the author of the commit wrote the code"
            },
            {  
               "type":"IntegerType",
               "logical_type":"Offset",
               "field_name":"author_date_offset",
               "desc": "Time offset (time zone) in which the author was when he committed the code"
            },
            {  
               "type":"ObjectIdType",
               "logical_type":"RID",
               "reference_to": "people",
               "field_name":"committer_id",
               "desc": "ObjectID of the committer of the commit. Committer is the person that last applied the commit"
            },
            {  
               "type":"DateType",
               "logical_type":"Date",
               "field_name":"committer_date",
               "desc": "Date at which the committer of the commit committed the code"
            },
            {  
               "type":"IntegerType",
               "logical_type":"Offset",
               "field_name":"committer_date_offset",
               "desc": "Time offset (time zone) in which the committer was when he committed the code"
            },
            {  
               "type":"StringType",
               "logical_type":"Text",
               "field_name":"message",
               "desc": "Message that was attached to the commit"
            }
         ],
         "desc": "Information about the different commits of a project are stored in this collection",
         "collection_name":"commit"
      },
      {
        "collection_name": "branch",
        "desc": "Information about the branch tips of a vcs system",
        "fields": [
            {  
               "type":"ObjectIdType",
               "logical_type":"OID",
               "field_name":"_id",
               "desc": "Identifier of the document"
            },
            {  
               "type":"ObjectIdType",
               "logical_type":"RID",
               "reference_to": "vcs_system",
               "field_name":"vcs_system_id",
               "desc": "ObjectID of the vcs_system to which this branch belongs"
            },
            {  
               "type":"ObjectIdType",
               "logical_type":"RID",
               "reference_to": "commit",
               "field_name":"commit_id",
               "desc": "ObjectID of the commit to which this branch tip is pointing to"
            },
            {  
               "type":"StringType",
               "logical_type":"Text",
               "field_name":"name",
               "desc": "Name of the branch"
            },
            {  
               "type":" BooleanType",
               "logical_type":"Other",
               "field_name":"is_origin_head",
               "desc": "True if this branch is the default origin branch (usually master in git)"
            }
        ]
      },
      {  
         "fields":[  
            {  
               "type":"ObjectIdType",
               "logical_type":"OID",
               "field_name":"_id",
               "desc": "Identifier of the document"
            },
            {  
               "type":"ObjectIdType",
               "logical_type":"RID",
               "reference_to": "vcs_system",
               "field_name":"vcs_system_id",
               "desc": "ObjectID of the vcs_system to which this file belongs"
            },
            {  
               "type":"StringType",
               "logical_type":"Location",
               "field_name":"path",
               "desc": "Path of the file (e.g. pyvcsshark/parser/gitparser.py)"
            }
         ],
         "desc": "Information about the files within an VCS system is stored in this collection",
         "collection_name":"file"
      },
      {  
         "fields":[  
            {  
               "type":"ObjectIdType",
               "logical_type":"OID",
               "field_name":"_id",
               "desc": "Identifier of the document"
            },
            {  
               "type":"ObjectIdType",
               "logical_type":"RID",
               "reference_to": "commit",
               "field_name":"commit_id",
               "desc": "ObjectID that links to the commit, to which this action belongs"
            },
            {  
               "type":"ObjectIdType",
               "logical_type":"RID",
               "reference_to": "file",
               "field_name":"file_id",
               "desc": "ObjectID of the file that was modified/deleted/added within this action"
            },
            {  
               "type":"StringType",
               "logical_type":"Other",
               "field_name":"mode",
               "desc": "Mode of the file change (A=added, D=deleted, M=modified, C=copy-edit, R=rename-edit, U=unmerged)"
            },
            {  
               "type":"IntegerType",
               "logical_type":"ProductMetric",
               "field_name":"size_at_commit",
               "desc": "Site of the file at the commit"
            },
            {  
               "type":"IntegerType",
               "logical_type":"ProcessMetric",
               "field_name":"lines_added",
               "desc": "Number of lines added"
            },
            {  
               "type":"IntegerType",
               "logical_type":"ProcessMetric",
               "field_name":"lines_deleted",
               "desc": "Number of lines deleted"
            },
            {  
               "type":"BooleanType",
               "logical_type":"Other",
               "field_name":"is_binary",
               "desc": "Marker if the file is a binary file"
            },
            {
               "type": "ObjectIdType",
               "logical_type": "RID",
               "reference_to": "file",
               "field_name": "old_file_id",
               "desc": "If the file was copied or renamed, this ObjectID will link to the old file id (i.e., the old path)"
            }
         ],
         "collection_name":"file_action",
         "desc": "This collection includes all information about the different actions that were done on the files in the repository"
      },
      {  
         "fields":[  
            {  
               "type":"ObjectIdType",
               "logical_type":"OID",
               "field_name":"_id",
               "desc": "Identifier of the document"
            },
            {
               "type": "ObjectIdType",
               "logical_type": "RID",
               "reference_to": "file_action",
               "field_name": "file_action_id",
               "desc": "ObjectID that links to the corresponding file action"
            },
            {  
               "type":"IntegerType",
               "logical_type":"ProductMetric",
               "field_name":"new_start",
               "desc": "Number that gives the new starting line (see: https://www.gnu.org/software/diffutils/manual/html_node/Detailed-Unified.html#Detailed-Unified)"
            },
            {  
               "type":"IntegerType",
               "logical_type":"ProductMetric",
               "field_name":"new_lines",
               "desc": "Number that gives the new amount of lines (see: https://www.gnu.org/software/diffutils/manual/html_node/Detailed-Unified.html#Detailed-Unified)"
            },
            {  
               "type":"IntegerType",
               "logical_type":"ProductMetric",
               "field_name":"old_start",
               "desc": "Number that gives the old starting line (see: https://www.gnu.org/software/diffutils/manual/html_node/Detailed-Unified.html#Detailed-Unified)"
            },
            {  
               "type":"IntegerType",
               "logical_type":"ProductMetric",
               "field_name":"old_lines",
               "desc": "Number that gives the old amount of lines (see: https://www.gnu.org/software/diffutils/manual/html_node/Detailed-Unified.html#Detailed-Unified)"
            },
            {  
               "type":"StringType",
               "logical_type":"Text",
               "field_name":"content",
               "desc": "Change content in unified diff format (without header), see: https://www.gnu.org/software/diffutils/manual/html_node/Detailed-Unified.html#Detailed-Unified"
            }
         ],
         "desc": "This collection contains all hunks that were created during the changing of files in the repository. All hunks follow the unified diff format (see: https://www.gnu.org/software/diffutils/manual/html_node/Detailed-Unified.html#Detailed-Unified)",
         "collection_name":"hunk"
      },
      {  
         "fields":[ 
            {  
               "type":"ObjectIdType",
               "logical_type":"OID",
               "field_name":"_id",
               "desc": "Identifier of the document"
            }, 
            {  
               "type":"StringType",
               "logical_type":"Other",
               "field_name":"email",
               "desc": "Email address of the person"
            },
            {  
               "type":"StringType",
               "logical_type":"Name",
               "field_name":"name",
               "desc": "Name of the person"
            }
         ],
         "desc": "This collection contains all persons that worked within the project (e.g., contributing a commit)",
         "collection_name":"people"
      },
      {  
         "fields":[
            {  
               "type":"ObjectIdType",
               "logical_type":"OID",
               "field_name":"_id",
               "desc": "Identifier of the document"
            },
            {  
               "type":"StringType",
               "logical_type":"Location",
               "field_name":"url",
               "desc": "URL of the vcs_system (e.g. https://github.com/smartshark/vcsSHARK)"
            },
            {
               "type":"DateType",
               "logical_type":"Date",
               "field_name":"last_updated",
               "desc": "Date of the last parsing of this vcs_system "
            },
            {  
               "type":"ObjectIdType",
               "logical_type":"RID",
               "reference_to": "project",
               "field_name":"project_id",
               "desc": "ObjectID that links to the projects, to which this vcs system belongs"
            },
            {  
               "type":"StringType",
               "logical_type":"Type",
               "field_name":"repository_type",
               "desc": "Type of the repository (e.g., git)"
            }
         ],
         "collection_name":"vcs_system",
         "desc": "Collection that contains all vcs systems from which data was collected"
      },
      {  
         "fields":[  
            {  
               "type":"ObjectIdType",
               "logical_type":"OID",
               "field_name":"_id",
               "desc": "Identifier of the document"
            },
            {
               "type":"StringType",
               "logical_type":"Name",
               "field_name":"name",
               "desc": "Name of the tag"
            },
            {
               "type": "ObjectIdType",
               "logical_type": "OID",
               "field_name": "vcs_system_id",
               "desc": "ObjectID that links to the vcs system to which this tag belongs"
            },
            {  
               "type":"ObjectIdType",
               "logical_type":"RID",
               "reference_to": "commit",
               "field_name":"commit_id",
               "desc": "ObjectID that links to the commit which this tag tags"
            },
            {  
               "type":"ObjectIdType",
               "logical_type":"RID",
               "reference_to": "people",
               "field_name":"tagger_id",
               "desc": "ObjectID to the person that tagged the commit"
            },
            {  
               "type":"StringType",
               "logical_type":"Text",
               "field_name":"message",
               "desc": "If set, includes the tagging message"
            },
            {  
               "type":"IntegerType",
               "logical_type":"Offset",
               "field_name":"date_offset",
               "desc": "The offset (time zone) in which the tagger was, when he tagged the commit"
            },
            {  
               "type":"DateType",
               "logical_type":"Date",
               "field_name":"date",
               "desc": "The date at which the commit was tagged"
            }
         ],
         "collection_name":"tag",
         "desc": "Collection that includes all information about different tags of the different vcs systems from which data was collected"
      }
   ]
}